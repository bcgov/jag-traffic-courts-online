apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: citizen-portal
    component: web
  name: citizen-portal-nginx-config
data:
  config: |
    location / {
      root   /usr/share/nginx/html;
      index  index.html index.htm;
      try_files $uri $uri/ /index.html;
      include /etc/nginx/mime.types;
      add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header Referrer-Policy "no-referrer-when-downgrade";
      gzip on;
      gzip_min_length 1000;
      gzip_proxied expired no-cache no-store private auth;
      gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    }

    location ~* \.env-config\.js$ {
      expires -1;
      add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    }

    error_page   500 502 503 504  /50x.html;

    location = /50x.html {
      root   /usr/share/nginx/html;
    }

    location /api/ {
        proxy_pass http://dispute-api:8080/api/;
    }
    location /swagger/ {
        proxy_pass http://dispute-api:8080/swagger/;
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: citizen-portal
    component: web
  name: citizen-portal-keycloak-config
data:
  config: |
    {
      config: {
      url: 'http://traffic-court-dev:8081/auth',
      realm: 'traffic-court',
      clientId: 'test',
      },
      initOptions: {
      onLoad: 'check-sso',
    }
---
kind: Service
apiVersion: v1
metadata:
  name: citizen-portal
  labels:
    app: citizen-portal
    component: web
spec:
  ports:
    - name: 80-tcp
      protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: citizen-portal
  name: citizen-portal
spec:
  selector:
    app: citizen-portal
  replicas: 3
  template:
    metadata:
      labels:
        app: citizen-portal
    spec:
      containers:
      - args:
        - nginx
        - -g
        - daemon off;
        env:
        image: image-registry.openshift-image-registry.svc:5000/0198bb-tools/citizen-portal:latest
        name: citizen-portal
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 50m
            memory: 128Mi
          requests:
            cpu: 20m
            memory: 64Mi
        volumeMounts:
          - name: nginx-config-vol
            mountPath: /opt/app-root/etc/nginx.default.d/default.conf
            subPath: default.conf
      restartPolicy: Always
      volumes:
        - name: config-vol
          configMap:
            name: citizen-portal-nginx-config
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - citizen-portal
      from:
        kind: ImageStreamTag
        namespace: 0198bb-tools
        name: citizen-portal:latest
    type: ImageChange
