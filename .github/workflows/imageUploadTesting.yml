# This is a work flow for testing build and upload image to openshift.
# the branches name can be changed according to what you want to test.
# It is not a roution work flow.
name: Main-Build .NET API Image and Push to Openshift Registry
on:
  push:
    branches: [feature/splunk]
jobs:
  build-citizen-api:
    runs-on: ubuntu-20.04
    environment: Development
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2

      - name: Get git commit short sha
        id: sha
        run: |
          shortSha=$(echo $(git rev-parse --short HEAD) | cut -c1-6)
          echo "::set-output name=sha_short::$shortSha"

      - name: Display short sha
        run: echo ${{ steps.sha.outputs.sha_short }}

      - name: Login to OpenShift
        uses: docker/login-action@v1
        with:
          registry: ${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}
          username: ${{secrets.OPENSHIFT_SA_USERNAME}}
          password: ${{secrets.OPENSHIFT_SA_PASSWORD}}

      - name: Build and push
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
          CONTEXT: ./src/backend/TrafficCourtsApi
          DOCKER_FILE: ./src/backend/TrafficCourtsApi/Dockerfile.citizen-api
          IMAGE: ${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}/${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}/citizen-api:${{secrets.OC_APP}}
        run: |
          docker build \
            --build-arg ASPNETCORE_ENVIRONMENT=Development \
            --file ${DOCKER_FILE} \
            --tag ${IMAGE} \
            ${CONTEXT}
            docker push ${IMAGE}

  build-ticket-search:
    runs-on: ubuntu-20.04
    environment: Development
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2

      - name: Get git commit short sha
        id: sha
        run: |
          shortSha=$(echo $(git rev-parse --short HEAD) | cut -c1-6)
          echo "::set-output name=sha_short::$shortSha"

      - name: Display short sha
        run: echo ${{ steps.sha.outputs.sha_short }}

      - name: Login to OpenShift
        uses: docker/login-action@v1
        with:
          registry: ${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}
          username: ${{secrets.OPENSHIFT_SA_USERNAME}}
          password: ${{secrets.OPENSHIFT_SA_PASSWORD}}

      - name: Build and push
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
          CONTEXT: ./src/ticket-search
          IMAGE: ${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}/${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}/ticket-search:${{secrets.OC_APP}}
        run: |
          docker build \
            --build-arg ASPNETCORE_ENVIRONMENT=Development \
            --tag ${IMAGE} \
            ${CONTEXT}
            docker push ${IMAGE}

  build-ticket-worker:
    runs-on: ubuntu-20.04
    environment: Development
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2

      - name: Login to OpenShift
        uses: docker/login-action@v1
        with:
          registry: ${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}
          username: ${{secrets.OPENSHIFT_SA_USERNAME}}
          password: ${{secrets.OPENSHIFT_SA_PASSWORD}}

      - name: Build and push
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
          CONTEXT: ./src/backend/TrafficCourtsApi
          DOCKER_FILE: ./src/backend/TrafficCourtsApi/Dockerfile.ticket-worker
          IMAGE: ${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}/${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}/ticket-worker:${{secrets.OC_APP}}
        run: |
          docker build \
            --build-arg ASPNETCORE_ENVIRONMENT=Development \
            --tag ${IMAGE} \
            --file ${DOCKER_FILE} \
            ${CONTEXT}
            docker push ${IMAGE}
