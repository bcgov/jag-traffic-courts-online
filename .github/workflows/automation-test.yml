# This is the workflow that creates a new automation test API image and pushes it to the Openshift image stream, triggering the deployment

name: AutomationTest - Build Image and Run Autotests on Workflow Dispatch

# Controls when the workflow will run
#on:
#  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:
#    inputs:
#        app:
#            description: 'App Name (tco)'
#            required: true
#            default: AutomationTests

on:
  push:
    branches: [ Automation-Tests-Update ]
    paths:
      - 'automation-tests/**'
      - '.github/workflows/automation-test.yml'

jobs:
  # This workflow contains a single job called "build-run-autotests"
  build-run-autotests:
    # The type of runner that the job will run on
    runs-on: self-hosted
    env:
      USERNAME_APP: ${{ secrets.USERNAME_APP }}
      PASSWORD_APP: ${{ secrets.PASSWORD_APP }}


    # Define Maven version to test in the job name
    name: Maven ${{ matrix.maven }} sample

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Git Checkout
        uses: actions/checkout@v4

      # Set up JDK build environment
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

#      # Setup Maven Action with specified Java and Maven versions
#      - name: Setup Maven Action
#        uses: s4u/setup-maven-action@v1.2.1
#        with:
#         java-version: 17
#         maven-version: 3.8.1
#      - name: Build with Maven
#        run: cd automation-tests &&
#             mvn verify

      # Add a step to install unzip
      - name: Install unzip
        run: apt-get update && apt-get install -y unzip

      # Setup Chrome for testing
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1
      # Display Chrome version in the logs
      - run: chrome --version

      # Runs build steps
      - name: Maven Package
        working-directory: automation-tests
        run: mvn -ntp clean package

      # Run the application
      - name: Running
        working-directory: automation-tests/target
        run: java -Xss2048k -jar TrafficCourtVirtualization-0.0.1-SNAPSHOT-test-jar-with-dependencies.jar eticket=true
