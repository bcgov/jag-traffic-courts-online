kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: rabbitmq
  labels:
    app: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      restartPolicy: Always
      serviceAccountName: rabbitmq
      terminationGracePeriodSeconds: 30
      containers:
        - resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 200m
              memory: 256Mi
          # readinessProbe:
          #   exec:
          #     command:
          #       - rabbitmqctl
          #       - status
          #   initialDelaySeconds: 10
          #   timeoutSeconds: 10
          #   periodSeconds: 10
          #   successThreshold: 1
          #   failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          lifecycle:
            preStop:
              exec:
                command:
                  - rabbitmqctl
                  - shutdown
          name: rabbitmq
          command:
            - sh
          args:
            - "-c"
            - >-
              cp -v /etc/rabbitmq/rabbitmq.conf ${RABBITMQ_CONFIG_FILE}.conf;
              exec docker-entrypoint.sh rabbitmq-server
          # livenessProbe:
          #   exec:
          #     command:
          #       - rabbitmqctl
          #       - status
          #   initialDelaySeconds: 30
          #   timeoutSeconds: 10
          #   periodSeconds: 10
          #   successThreshold: 1
          #   failureThreshold: 3
          env:
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: username
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: password
            - name: RABBITMQ_ERLANG_COOKIE
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: cookie
            - name: K8S_SERVICE_NAME
              value: rabbitmq
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: RABBITMQ_USE_LONGNAME
              value: "true"
            - name: RABBITMQ_NODENAME
              value: >-
                rabbit@$(POD_NAME).rabbitmq.$(POD_NAMESPACE).svc.cluster.local
            - name: RABBITMQ_CONFIG_FILE
              value: /var/lib/rabbitmq/rabbitmq
          ports:
            - name: http
              containerPort: 15672
              protocol: TCP
            - name: amqp
              containerPort: 5672
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config-volume
              mountPath: /etc/rabbitmq
            - name: rabbitmq-storage
              mountPath: /var/lib/rabbitmq
          terminationMessagePolicy: File
          image: rabbitmq:3.8-management
      serviceAccount: rabbitmq
      imagePullSecrets:
        - name: docker-creds
      volumes:
        - name: config-volume
          configMap:
            name: rabbitmq-config
            items:
              - key: rabbitmq.conf
                path: rabbitmq.conf
              - key: enabled_plugins
                path: enabled_plugins
            defaultMode: 420
      dnsPolicy: ClusterFirst
  volumeClaimTemplates:
    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: rabbitmq-storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: netapp-block-standard
        volumeMode: Filesystem
      status:
        phase: Pending
  serviceName: rabbitmq
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  revisionHistoryLimit: 10
