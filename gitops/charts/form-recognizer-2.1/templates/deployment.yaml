kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ include "form-recognizer.fullname" . }}-api
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ include "form-recognizer.fullname" . }}-api
      app.kubernetes.io/name: {{ include "form-recognizer.fullname" . }}-api
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ include "form-recognizer.fullname" . }}-api
        app.kubernetes.io/name: {{ include "form-recognizer.fullname" . }}-api
    spec:
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      volumes:
        - name: shared
          persistentVolumeClaim:
            claimName: {{ include "form-recognizer.fullname" . }}-shared
        - name: logs
          persistentVolumeClaim:
            claimName: {{ include "form-recognizer.fullname" . }}-logs
      containers:
        - name: azure-form-recognizer-api
          env:
            - name: eula
              value: accept
            - name: Logging__Console__LogLevel__Default
              value: Information
            - name: Queue__RabbitMQ__HostName
              value: rabbitmq
            - name: Queue__RabbitMQ__Port
              value: '5672'
            - name: SharedRootFolder
              value: /shared
            - name: Mounts__Shared
              value: /shared
            - name: Mounts__Output
              value: /logs
            - name: Queue__RabbitMQ__VirtualHost
              value: {{ .Values.rabbitmq.virtualHost | quote }}
            - name: Queue__RabbitMQ__Username
              value: user
            - name: Queue__RabbitMQ__Password
              valueFrom:
                secretKeyRef:
                  name: rabbitmq
                  key: rabbitmq-password
            - name: apikey
              valueFrom:
                secretKeyRef:
                  name: {{ include "form-recognizer.fullname" . }}-secrets
                  key: FORMRECOGNIZER__APIKEY
            - name: billing
              valueFrom:
                secretKeyRef:
                  name: {{ include "form-recognizer.fullname" . }}-secrets
                  key: FORMRECOGNIZER__ENDPOINT
          ports:
            - containerPort: 5000
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ready
              port: 5000
            initialDelaySeconds: 15
            periodSeconds: 15
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          volumeMounts:
            - name: shared
              mountPath: /shared
            - name: logs
              mountPath: /logs
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}"
          {{- if .Values.api.resources }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          {{- end }}
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ include "form-recognizer.fullname" . }}-layout
spec:
  replicas: {{ .Values.layout.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ include "form-recognizer.fullname" . }}-layout
      app.kubernetes.io/name: {{ include "form-recognizer.fullname" . }}-layout
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ include "form-recognizer.fullname" . }}-layout
        app.kubernetes.io/name: {{ include "form-recognizer.fullname" . }}-layout
    spec:
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      volumes:
        - name: shared
          persistentVolumeClaim:
            claimName: {{ include "form-recognizer.fullname" . }}-shared
        - name: logs
          persistentVolumeClaim:
            claimName: {{ include "form-recognizer.fullname" . }}-logs
      containers:
        - name: azure-form-recognizer-layout
          {{- if .Values.layout.resources }}
          resources:
            {{- toYaml .Values.layout.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.layout.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.layout.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          env:
            - name: eula
              value: accept
            - name: Logging__Console__LogLevel__Default
              value: Information
            - name: Queue__RabbitMQ__HostName
              value: rabbitmq
            - name: Queue__RabbitMQ__Port
              value: '5672'
            - name: SharedRootFolder
              value: /shared
            - name: Mounts__Shared
              value: /shared
            - name: Mounts__Output
              value: /logs
            - name: Queue__RabbitMQ__VirtualHost
              value: {{ .Values.rabbitmq.virtualHost | quote }}
            - name: Queue__RabbitMQ__Username
              value: user
            - name: Queue__RabbitMQ__Password
              valueFrom:
                secretKeyRef:
                  name: rabbitmq
                  key: rabbitmq-password
            - name: apikey
              valueFrom:
                secretKeyRef:
                  name: {{ include "form-recognizer.fullname" . }}-secrets
                  key: FORMRECOGNIZER__APIKEY
            - name: billing
              valueFrom:
                secretKeyRef:
                  name: {{ include "form-recognizer.fullname" . }}-secrets
                  key: FORMRECOGNIZER__ENDPOINT
          ports:
            - containerPort: 5000
              protocol: TCP
          volumeMounts:
            - name: shared
              mountPath: /shared
            - name: logs
              mountPath: /logs
          image: "{{ .Values.layout.image.repository }}:{{ .Values.layout.image.tag }}"
          imagePullPolicy: {{ .Values.layout.image.pullPolicy | quote }}
  strategy:
    type: Recreate
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ include "form-recognizer.fullname" . }}-proxy
spec:
  replicas: {{ .Values.proxy.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ include "form-recognizer.fullname" . }}-proxy
      app.kubernetes.io/name: {{ include "form-recognizer.fullname" . }}-proxy
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ include "form-recognizer.fullname" . }}-proxy
        app.kubernetes.io/name: {{ include "form-recognizer.fullname" . }}-proxy
    spec:
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      volumes:
        - name: shared
          persistentVolumeClaim:
            claimName: {{ include "form-recognizer.fullname" . }}-shared
        - name: logs
          persistentVolumeClaim:
            claimName: {{ include "form-recognizer.fullname" . }}-logs
      containers:
        - name: azure-form-recognizer-proxy
          {{- if .Values.proxy.resources }}
          resources:
            {{- toYaml .Values.proxy.resources | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: 8080
              protocol: TCP
          # /ready will be proxied to the api
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 15
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          image: "{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}"
          volumeMounts:
            - name: configuration
              mountPath: /etc/nginx/nginx.conf
              readOnly: true
              subPath: nginx.conf
      volumes:
        - name: configuration
          configMap:
            name: {{ include "form-recognizer.fullname" . }}-proxy-config
            items:
              - key: nginx.conf
                path: nginx.conf
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ include "form-recognizer.fullname" . }}-supervised
spec:
  replicas: {{ .Values.supervised.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ include "form-recognizer.fullname" . }}-supervised
      app.kubernetes.io/name: {{ include "form-recognizer.fullname" . }}-supervised
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ include "form-recognizer.fullname" . }}-supervised
        app.kubernetes.io/name: {{ include "form-recognizer.fullname" . }}-supervised
    spec:
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      volumes:
        - name: shared
          persistentVolumeClaim:
            claimName: {{ include "form-recognizer.fullname" . }}-shared
        - name: logs
          persistentVolumeClaim:
            claimName: {{ include "form-recognizer.fullname" . }}-logs
      containers:
        - name: azure-form-recognizer-supervised
          {{- if .Values.supervised.resources }}
          resources:
            {{- toYaml .Values.supervised.resources | nindent 12 }}
          {{- end }}
          env:
            - name: eula
              value: accept
            - name: Logging__Console__LogLevel__Default
              value: Information
            - name: Queue__RabbitMQ__HostName
              value: {{ .Values.rabbitmq.host | quote }}
            - name: Queue__RabbitMQ__Port
              value: {{ .Values.rabbitmq.port | quote }}
            - name: Queue__RabbitMQ__VirtualHost
              value: {{ .Values.rabbitmq.virtualHost | quote }}
            - name: Queue__RabbitMQ__Username
              value: {{ .Values.rabbitmq.username | quote }}
            - name: Queue__RabbitMQ__Password
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.rabbitmq.secret.name }}
                  key: {{ .Values.rabbitmq.secret.passwordKey }}
            - name: SharedRootFolder
              value: /shared
            - name: Mounts__Shared
              value: /shared
            - name: Mounts__Output
              value: /logs
            - name: apikey
              valueFrom:
                secretKeyRef:
                  name: {{ include "form-recognizer.fullname" . }}-secrets
                  key: FORMRECOGNIZER__APIKEY
            - name: billing
              valueFrom:
                secretKeyRef:
                  name: {{ include "form-recognizer.fullname" . }}-secrets
                  key: FORMRECOGNIZER__ENDPOINT
            - name: CustomFormRecognizer__ContainerPhase
              value: All
            - name: CustomFormRecognizer__LayoutAnalyzeUri
              value: http://{{ include "form-recognizer.fullname" . }}-layout:5000/formrecognizer/v2.1/layout/analyze
          volumeMounts:
            - name: shared
              mountPath: /shared
            - name: logs
              mountPath: /logs
          image: "{{ .Values.supervised.image.repository }}:{{ .Values.supervised.image.tag }}"
