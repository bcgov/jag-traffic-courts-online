apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "common-object-management-service.fullname" . }}-db-migration
  labels:
    {{- include "common-object-management-service.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: {{ include "common-object-management-service.fullname" . }}-db-migration
    spec:
      restartPolicy: Never
      containers:
      - name: db-migrations 
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        command: [ "npm", "run", "migrate" ]
        env:
          - name: NODE_ENV
            value: {{ .Values.node.env }}
          {{- /* Database */}}
          {{- if .Values.database.existingSecretDatabaseKey }}
          - name: DB_DATABASE
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.existingSecret }}
                key: {{ .Values.database.existingSecretDatabaseKey }}
          {{- end }}
          {{- if .Values.database.existingSecretHostKey }}
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.existingSecret }}
                key: {{ .Values.database.existingSecretHostKey }}
          {{- end }}
          {{- if .Values.database.existingSecretPortKey }}
          - name: DB_PORT
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.existingSecret }}
                key: {{ .Values.database.existingSecretPortKey }}
          {{- end }}
          
          {{- if .Values.database.existingSecretUserKey }}
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.existingSecret }}
                key: {{ .Values.database.existingSecretUserKey }}
          {{- end }}
          {{- if .Values.database.existingSecretPasswordKey }}
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{.Values.database.existingSecret }}
                key: {{ .Values.database.existingSecretPasswordKey }}
          {{- end }}
