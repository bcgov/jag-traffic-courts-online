kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: common-object-management-service
  labels:
    app: common-object-management-service
    app.kubernetes.io/part-of: common-object-management-service
    app.kubernetes.io/instance: common-object-management-service
    app.kubernetes.io/version: 0.4.0
    app.kubernetes.io/component: backend
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/name: common-object-management-service
spec:
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
      pre:
        failurePolicy: Retry
        execNewPod:
          command:
            - npm
            - run
            - migrate
          env:
            - name: NODE_ENV
              value: production
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: common-object-management-service-database
                  key: app-db-name
            - name: DB_HOST
              value: postgres
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: common-object-management-service-database
                  key: app-db-username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: common-object-management-service-database
                  key: app-db-password
          containerName: app
    resources:
      limits:
        cpu: 200m
        memory: 512Mi
      requests:
        cpu: 50m
        memory: 128Mi
    activeDeadlineSeconds: 21600
  triggers:
    - type: ConfigChange
  replicas: 1
  revisionHistoryLimit: 10
  test: false
  selector:
    app.kubernetes.io/instance: common-object-management-service
    app.kubernetes.io/name: common-object-management-service
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: common-object-management-service
        app.kubernetes.io/name: common-object-management-service
    spec:
      containers:
        - resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 128Mi
          readinessProbe:
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: app
          livenessProbe:
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: NODE_ENV
              value: production
            - name: BASICAUTH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: common-object-management-service-basicauth
                  key: username
            - name: BASICAUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: common-object-management-service-basicauth
                  key: password
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: common-object-management-service-database
                  key: app-db-name
            - name: DB_HOST
              value: postgres
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: common-object-management-service-database
                  key: app-db-username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: common-object-management-service-database
                  key: app-db-password
            - name: OBJECTSTORAGE_ACCESSKEYID
              valueFrom:
                secretKeyRef:
                  name: common-object-management-service-objectstorage
                  key: username
            - name: OBJECTSTORAGE_SECRETACCESSKEY
              valueFrom:
                secretKeyRef:
                  name: common-object-management-service-objectstorage
                  key: password
          ports:
            - containerPort: 3000
              protocol: TCP
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: File
          envFrom:
            - configMapRef:
                name: common-object-management-service-config
          image: 'docker.io/bcgovimages/common-object-management-service:0.4'
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
