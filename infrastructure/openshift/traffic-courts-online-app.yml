apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: traffic-courts-online
  description: >-
    Deployment template for the Traffic Courts Online App
parameters:
- name: NAME
  displayName: name
  description: A prefix appended to all objects
  required: true
  value: tco
- name: OC_NAMESPACE
  required: true
  value: 0198bb
- name: OC_APP
  required: true
- name: FRONTEND_POD
  required: true
  value: citizen-portal
- name: FRONTEND_URL
  required: true
- name: USE_KEYCLOAK
  required: true
  value: "true"
- name: USE_MOCK_SERVICES
  required: true
  value: "false"
- name: URL_STUB
  value: "-0198bb-dev.apps.silver.devops.gov.bc.ca"
  required: false
- name: WEB_SCHEMA
  value: https
- name: API_POD
  required: true
  value: dispute-api
objects:

### Frontend ###
### Citizen Portal Deployment Configs ###
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  namespace: ${OC_NAMESPACE}-${OC_APP}
  metadata:
    name: ${FRONTEND_POD}
    namespace: ${OC_NAMESPACE}-${OC_APP}
    labels:
      app.kubernetes.io/part-of: ${NAME}
  spec:
    completionDeadlineSeconds: 1200
    replicas: 1
    selector:
      name: ${FRONTEND_POD}
    strategy:
      type: Recreate
      maxSurge: 50%
      maxUnavailable: 0
    template:
      metadata:
        labels:
          dev-app: ${NAME}
          name: ${FRONTEND_POD}
      spec:
        containers:
        - env:
          - name: USE_KEYCLOAK
            value: "${USE_KEYCLOAK}"
          - name: USE_MOCK_SERVICES
            value: "${USE_MOCK_SERVICES}"
          image: >-
            image-registry.openshift-image-registry.svc:5000/${OC_NAMESPACE}-tools/citizen-portal:${OC_APP}
          name: ${FRONTEND_POD} 
          ports:
            - containerPort: 8080
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - ${FRONTEND_POD}
          from:
            kind: ImageStreamTag
            namespace: "${OC_NAMESPACE}-tools"
            name: 'citizen-portal:${OC_APP}'
  status: {}
### Citizen Portal Service ###
- apiVersion: v1
  kind: Service
  namespace: ${OC_NAMESPACE}-${OC_APP}
  labels:
    app: ${FRONTEND_POD}
    app.kubernetes.io/component: ${NAME}
    app.kubernetes.io/instance: ${NAME}
    app.kubernetes.io/part-of: ${NAME}
  metadata:
    name: ${FRONTEND_POD}
    namespace: ${OC_NAMESPACE}-${OC_APP}
    labels:
      app.kubernetes.io/part-of: ${NAME}
  spec:
    ports:
      - name: "http"
        port: 80
        targetPort: 8080
    selector:
      name: ${FRONTEND_POD}
### Citizen Portal Routes ###
- apiVersion: route.openshift.io/v1
  kind: Route
  namespace: ${OC_NAMESPACE}-${OC_APP}
  labels:
    app: ${FRONTEND_POD}
    app.kubernetes.io/component: ${NAME}
    app.kubernetes.io/instance: ${NAME}
    app.kubernetes.io/part-of: ${NAME}
  metadata:
    name: ${FRONTEND_POD}
    namespace: ${OC_NAMESPACE}-${OC_APP}
  spec:
    host: ${FRONTEND_URL}${URL_STUB}
    to:
      kind: Service
      name: ${FRONTEND_POD}
      weight: 100
    port:
      targetPort: http
    tls:
      termination: edge
    wildcardPolicy: None

### Back End ###
### Dispute-API Deployment Configs ###
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  namespace: ${OC_NAMESPACE}-${OC_APP}
  labels:
    app: ${API_POD}
    app.kubernetes.io/component: ${NAME}
    app.kubernetes.io/instance: ${NAME}
    app.kubernetes.io/part-of: ${NAME}
  metadata:
    name: ${API_POD}
    namespace: ${OC_NAMESPACE}-${OC_APP}
    labels:
      app.kubernetes.io/part-of: ${NAME}
  spec:
    completionDeadlineSeconds: 1200
    replicas: 1
    selector:
      name: ${API_POD}
    strategy:
      type: Recreate
      maxSurge: 50%
      maxUnavailable: 0
    template:
      metadata:
        labels:
          dev-app: ${NAME}
          name: ${API_POD}
      spec:
        containers:
          - env:
              - name: ASPNETCORE_ENVIRONMENT
                value: Development
              - name: SPLUNK_COLLECTOR_URL
                value: ""
              - name: SPLUNK_TOKEN
                value: ""
            image: >-
              image-registry.openshift-image-registry.svc:5000/${OC_NAMESPACE}-tools/dispute-api:${OC_APP}
            name: ${API_POD}
            ports:
              - containerPort: 8080
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - ${API_POD}
          from:
            kind: ImageStreamTag
            namespace: "${OC_NAMESPACE}-tools"
            name: 'dispute-api:${OC_APP}'
  status: {}

#### Dispute API Service ###
- apiVersion: v1
  namespace: ${OC_NAMESPACE}-${OC_APP}
  kind: Service
  metadata:
    name: ${API_POD}
    namespace: ${OC_NAMESPACE}-${OC_APP}
    labels:
      app.kubernetes.io/part-of: ${NAME}
  spec:
    ports:
      - name: ${API_POD}
        port: 8080
        targetPort: 8080
    selector:
      name: ${API_POD}

### Network Policy ###
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-internal-traffic
    namespace: ${OC_NAMESPACE}-${OC_APP}
  spec:
    podSelector: {}
    ingress:
      - ports:
          - protocol: TCP
            port: 8080
          - protocol: TCP
            port: 80
          - protocol: TCP
            port: 5672
    policyTypes:
      - Ingress
