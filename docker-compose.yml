version: "3.0"

services:

# #############################################################################################
# ###                                 TrafficCourt BACKEND                                  ###
# #############################################################################################
  dispute-api:
    container_name: dispute-api
    build:
      context: ./src/backend/TrafficCourtsApi
      # args:
      #   PROJECT_NAME: DisputeApi.Web
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      SPLUNK_COLLECTOR_URL: ${SPLUNK_COLLECTOR_URL}
      SPLUNK_TOKEN: ${SPLUNK_HEC_TOKEN}
    ports:
      - "5000:8080"
    restart: always
    networks:
      - traffic-court-net

# #############################################################################################
# ###                                 TrafficCourt FRONTEND                                 ###
# #############################################################################################
  citizen-portal:
    container_name: citizen-portal
    build:
      context: ./src/frontend/citizen-portal
      args: 
        USE_MOCK_SERVICES: "false"
        USE_KEYCLOAK: "false"
        API_URL: ${API_URL}
        KEYCLOAK_URL: ${KEYCLOAK_URL}
        KEYCLOAK_REALM: ${KEYCLOAK_REALM}
        KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
    environment: 
      USE_MOCK_SERVICES: "false"
      USE_KEYCLOAK: "false"
    command: "nginx -g 'daemon off;'"     
    restart: always
    ports:
      - "4201:8080"
    networks:
      - traffic-court-net

#############################################################################################
###                                 TrafficCourt DEMO                                     ###
#############################################################################################  
  citizen-portal-demo:
    container_name: citizen-portal-demo
    build:
      context: ./src/frontend/citizen-portal
      args: 
        USE_MOCK_SERVICES: "true"
        USE_KEYCLOAK: "false"
        API_URL: ${API_URL}
        KEYCLOAK_URL: ${KEYCLOAK_URL}
        KEYCLOAK_REALM: ${KEYCLOAK_REALM}
        KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
    environment: 
      - USE_MOCK_SERVICES=true
      - USE_KEYCLOAK=false
    command: "nginx -g 'daemon off;'"
    restart: always
    ports:
      - "4200:8080"
    networks:
      - traffic-court-net

#############################################################################################
###                                  KEYCLOAK                                             ###
#############################################################################################  
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak
    environment:
      DB_VENDOR: H2
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
      KEYCLOAK_IMPORT: ${KEYCLOAK_IMPORT}
      KEYCLOAK_FRONTEND_URL: ${KEYCLOAK_FRONTEND_URL}
    volumes:
      - ./infrastructure/keycloak/realm-export.json:/tmp/realm-export.json
    ports:
      - 8081:8080
    networks:
      - traffic-court-net

# #############################################################################################
# ###                                  KEYCLOAK CONFIG                                      ###
# #############################################################################################  
  keycloak-config:
    container_name: keycloak-config
    build:
      context: ./infrastructure/keycloak
      args:
        KEYCLOAK_URL: http://keycloak:8080
    command: sh -c "dockerize -wait http://keycloak:8080 -timeout 300s -wait-retry-interval 10s /tmp/createuser.sh"
    networks:
      - traffic-court-net

#############################################################################################
###                                  SPLUNK                                               ###
#############################################################################################  
  splunk:
    image: ${SPLUNK_IMAGE:-splunk/splunk:latest}
    container_name: splunk
    environment:
      SPLUNK_START_ARGS: --accept-license
      SPLUNK_HEC_TOKEN: ${SPLUNK_HEC_TOKEN}
      SPLUNK_PASSWORD: ${SPLUNK_PASSWORD}
    ports:
      - 8000:8000
      - 8088:8088
    networks:
      - traffic-court-net

networks:
  traffic-court-net:
    driver: "bridge"