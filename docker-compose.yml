version: "3.0"

services:
  # #############################################################################################
  # ###                                 TrafficCourt BACKEND                                  ###
  # #############################################################################################
  dispute-api:
    container_name: dispute-api
    build:
      context: ./src/backend/TrafficCourtsApi
      # args:
      #   PROJECT_NAME: DisputeApi.Web
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      SPLUNK_COLLECTOR_URL: ${SPLUNK_COLLECTOR_URL}
      SPLUNK_TOKEN: ${SPLUNK_HEC_TOKEN}
      OAUTH__OAUTHURL: ${OAUTH__OAUTHURL}
      OAUTH__RESOURCEURL: ${OAUTH__RESOURCEURL}
      OAUTH__CLIENTID: ${OAUTH__CLIENTID}
      OAUTH__SECRET: ${OAUTH__SECRET}
      RSI__BASEADDRESS: ${RSI__BASEADDRESS}
    ports:
      - "5000:8080"
    restart: always
    networks:
      - traffic-court-net

  # #############################################################################################
  # ###                                 TrafficCourt FRONTEND                                 ###
  # #############################################################################################
  citizen-portal:
    container_name: citizen-portal
    build:
      context: ./src/frontend/citizen-portal
      args:
        USE_MOCK_SERVICES: ${USE_MOCK_SERVICES}
        USE_KEYCLOAK: ${USE_KEYCLOAK}
        API_URL: ${API_URL}
        KEYCLOAK_URL: ${KEYCLOAK_URL}
        KEYCLOAK_REALM: ${KEYCLOAK_REALM}
        KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
    environment:
      USE_MOCK_SERVICES: ${USE_MOCK_SERVICES}
      USE_KEYCLOAK: ${USE_KEYCLOAK}
    # command: "nginx -g 'daemon off;'"
    restart: always
    ports:
      - "8080:8080"
    networks:
      - traffic-court-net

  #############################################################################################
  ###                                 TrafficCourt DEMO                                     ###
  #############################################################################################
  # citizen-portal-demo:
  #   container_name: citizen-portal-demo
  #   build:
  #     context: ./src/frontend/citizen-portal
  #     args:
  #       USE_MOCK_SERVICES: "true"
  #       USE_KEYCLOAK: "false"
  #       API_URL: ${API_URL}
  #       KEYCLOAK_URL: ${KEYCLOAK_URL}
  #       KEYCLOAK_REALM: ${KEYCLOAK_REALM}
  #       KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
  #   environment:
  #     USE_MOCK_SERVICES: "true"
  #     USE_KEYCLOAK: "false"
  #   command: "nginx -g 'daemon off;'"
  #   restart: always
  #   ports:
  #     - "4200:8080"
  #   networks:
  #     - traffic-court-net

  #############################################################################################
  ###                                  KEYCLOAK                                             ###
  #############################################################################################
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak
    environment:
      DB_VENDOR: H2
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
      KEYCLOAK_IMPORT: ${KEYCLOAK_IMPORT}
      KEYCLOAK_FRONTEND_URL: ${KEYCLOAK_FRONTEND_URL}
    volumes:
      - ./infrastructure/keycloak/realm-export.json:/tmp/realm-export.json
    ports:
      - 8081:8080
    networks:
      - traffic-court-net

  # #############################################################################################
  # ###                                  KEYCLOAK CONFIG                                      ###
  # #############################################################################################
  keycloak-config:
    container_name: keycloak-config
    build:
      context: ./infrastructure/keycloak
      args:
        KEYCLOAK_URL: http://keycloak:8080
    command: sh -c "dockerize -wait http://keycloak:8080 -timeout 300s -wait-retry-interval 10s /tmp/createuser.sh"
    networks:
      - traffic-court-net

  #############################################################################################
  ###                                  SPLUNK                                               ###
  #############################################################################################
  splunk:
    image: ${SPLUNK_IMAGE:-splunk/splunk:latest}
    container_name: splunk
    environment:
      SPLUNK_START_ARGS: --accept-license
      SPLUNK_HEC_TOKEN: ${SPLUNK_HEC_TOKEN}
      SPLUNK_PASSWORD: ${SPLUNK_PASSWORD}
    ports:
      - 8000:8000
      - 8088:8088
    networks:
      - traffic-court-net
  #############################################################################################
  ###                           RABBITMQ                                                    ###
  #############################################################################################
  rabbitmq-tco:
    image: rabbitmq:3.7.15-management
    # image: registry.redhat.io/rhosp-rhel8/openstack-rabbitmq:16.1.5-4
    container_name: rabbitmq-tco
    hostname: rabbitmq
    ports:
      - 5671:5672
      - 15671:15672
    volumes:
      - data-rabbit:/var/lib/rabbitmq/mnesia/rabbit@app-rabbitmq:cached
    restart: always
    networks:
      - traffic-court-net
      
  #############################################################################################
  ###                           REDIS & REDIS COMMANDER                                     ###
  #############################################################################################
  redis:
    container_name: redis
    image: redis
    hostname: ${REDIS__HOST}
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS__PASSWORD}"]
    ports:
      - "6379:6379"
    networks:
      - traffic-court-net
    environment: 
      - REDIS_PASSWORD="${REDIS__PASSWORD}"
    volumes:
      - data-redis:/data
    restart: always

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander
    restart: always
    depends_on: [redis]
    networks: 
      - traffic-court-net
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOST=${REDIS__HOST}
      - REDIS_PASSWORD="${REDIS__PASSWORD}"
  
networks:
  traffic-court-net:
    driver: "bridge"

volumes:
  data-rabbit:
  data-redis: