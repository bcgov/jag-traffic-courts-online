version: "3.8"

services:
  # #############################################################################################
  # ###                                 TrafficCourt BACKEND                                  ###
  # #############################################################################################
  citizen-api:
    container_name: citizen-api
    build:
      context: ./src/backend/TrafficCourtsApi
      dockerfile: DockerfileCitizenApi
    environment:
      DB_CONNECTION_STRING: "host=postgres;port=5432;database=postgres;username=postgres;password=postgres"
      ASPNETCORE_ENVIRONMENT: Development
      SPLUNK__URL: http://splunk:8088/
      SPLUNK__TOKEN: 176FCEBF-4CF5-4EDF-91BC-703796522D20
      TICKETSEARCHAPI__BASEURL: http://ticket-search:8080/
      RABBITMQ__HOST: rabbitmq
      RABBITMQ__PORT: 5672
      RABBITMQ__USERNAME: guest
      RABBITMQ__PASSWORD: guest
      PaybcApi__BaseUrl: http://paybc-mock-0198bb-dev.apps.silver.devops.gov.bc.ca/ticket,
      PaybcApi__CallbackBaseUrl: https://dev.violationtickets.gov.bc.ca/paymentComplete
    ports:
      - "5000:8080"
    restart: always
    depends_on: [splunk, rabbitmq, ticket-search]
    networks:
      - traffic-court-net

  ticket-search:
    container_name: ticket-search
    build:
      context: ./src/ticket-search
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      SPLUNK_COLLECTOR_URL: http://splunk:8088/
      SPLUNK_TOKEN: 176FCEBF-4CF5-4EDF-91BC-703796522D20
      OAUTH__OAUTHURL: ${OAUTH__OAUTHURL}
      OAUTH__RESOURCEURL: ${OAUTH__RESOURCEURL}
      OAUTH__CLIENTID: ${OAUTH__CLIENTID}
      OAUTH__SECRET: ${OAUTH__SECRET}
      RSI__BASEADDRESS: ${RSI__BASEADDRESS}
      RSI__OPERATIONMODE: FAKE
    ports:
      - "5100:8080"
    restart: always
    depends_on: [splunk]
    networks:
      - traffic-court-net

  ticket-worker:
    container_name: ticket-worker
    build:
      context: ./src/backend/TrafficCourtsApi
      dockerfile: DockerfileTicketWorker
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      SPLUNK__URL: http://splunk:8088/
      SPLUNK__TOKEN: 176FCEBF-4CF5-4EDF-91BC-703796522D20
      RABBITMQ__HOST: rabbitmq
      RABBITMQ__PORT: 5672
      RABBITMQ__USERNAME: guest
      RABBITMQ__PASSWORD: guest
    ports:
      - "5200:8080"
    restart: always
    depends_on: [splunk, rabbitmq]
    networks:
      - traffic-court-net
  # #############################################################################################
  # ###                                 TrafficCourt FRONTEND                                 ###
  # #############################################################################################
  citizen-portal:
    container_name: citizen-portal
    build:
      context: ./src/frontend/citizen-portal
    restart: always
    ports:
      - "8080:8080"
    depends_on: [citizen-api]
    networks:
      - traffic-court-net

  #############################################################################################
  ###                                  KEYCLOAK                                             ###
  #############################################################################################
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak
    environment:
      DB_VENDOR: H2
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /tmp/realm-export.json
      KEYCLOAK_FRONTEND_URL: http://localhost:5002/auth
    volumes:
      - ./infrastructure/keycloak/realm-export.json:/tmp/realm-export.json
    ports:
      - 5002:8080

  # #############################################################################################
  # ###                                  KEYCLOAK CONFIG                                      ###
  # #############################################################################################
  keycloak-config:
    build:
      context: ./infrastructure/keycloak
      args:
        - KEYCLOAK_URL=http://keycloak:8080
    command: sh -c "dockerize -wait http://keycloak:8080 -timeout 300s /tmp/createuser.sh"
    depends_on: [keycloak]

  #############################################################################################
  ###                                  SPLUNK                                               ###
  #############################################################################################
  splunk:
    image: ${SPLUNK_IMAGE:-splunk/splunk:latest}
    container_name: splunk
    environment:
      SPLUNK_START_ARGS: --accept-license
      SPLUNK_HEC_TOKEN: 176FCEBF-4CF5-4EDF-91BC-703796522D20
      SPLUNK_PASSWORD: splunkpassword
    ports:
      - 8000:8000
      - 8088:8088

  #############################################################################################
  ###                                  PostgreSQL Database                                  ###
  #############################################################################################
  postgres:
    restart: always
    container_name: disputedb
    image: postgres:10.6
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USERNAME: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - data-postgres:/var/lib/postgresql/data

  #############################################################################################
  ###                           RABBITMQ                                                    ###
  #############################################################################################
  rabbitmq:
    image: rabbitmq:3.7.15-management
    # image: registry.redhat.io/rhosp-rhel8/openstack-rabbitmq:16.1.5-4
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - data-rabbit:/var/lib/rabbitmq/mnesia/rabbit@app-rabbitmq:cached
    restart: always
    networks:
      - traffic-court-net

  #############################################################################################
  ###                           REDIS & REDIS COMMANDER                                     ###
  #############################################################################################
  redis:
    container_name: redis
    image: redis
    hostname: local:redis:6379
    command:
      ["redis-server", "--appendonly", "yes", "--requirepass", "redispassword"]
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD="redispassword"
    volumes:
      - data-redis:/data
    restart: always
    networks:
      - traffic-court-net

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander
    restart: always
    depends_on: [redis]
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOST=local:redis:6379
      - REDIS_PASSWORD=redispassword
    networks:
      - traffic-court-net

networks:
  traffic-court-net:
    driver: "bridge"

volumes:
  data-rabbit:
  data-redis:
  data-postgres:
