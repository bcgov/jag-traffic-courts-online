{
  "openapi": "3.0.1",
  "info": {
    "title": "VTC Staff API",
    "description": "Violation Ticket Centre Staff API",
    "version": "v1"
  },
  "paths": {
    "/api/dispute/disputes": {
      "get": {
        "tags": [
          "Dispute"
        ],
        "summary": "Returns all Disputes from the Oracle Data API.",
        "responses": {
          "200": {
            "description": "The Disputes were found.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dispute"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dispute"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dispute"
                  }
                }
              }
            }
          },
          "500": {
            "description": "There was a server error that prevented the search from completing successfully or no data found."
          },
          "401": {
            "description": "Unauthenticated."
          },
          "403": {
            "description": "Forbidden, wrong user roles."
          }
        }
      }
    },
    "/api/dispute/{disputeId}": {
      "get": {
        "tags": [
          "Dispute"
        ],
        "summary": "Returns a single Dispute with the given identifier from the Oracle Data API.",
        "parameters": [
          {
            "name": "disputeId",
            "in": "path",
            "description": "Unique identifier for a specific Dispute record.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Dispute was found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Dispute"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dispute"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dispute"
                }
              }
            }
          },
          "400": {
            "description": "The request was not well formed. Check the parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "There was a server error that prevented the search from completing successfully or no data found."
          },
          "401": {
            "description": "Unauthenticated."
          },
          "403": {
            "description": "Forbidden, wrong user roles."
          }
        }
      },
      "put": {
        "tags": [
          "Dispute"
        ],
        "summary": "Updates a single Dispute through the Oracle Data Interface API based on unique dispute id and the dispute data being passed in the body.",
        "parameters": [
          {
            "name": "disputeId",
            "in": "path",
            "description": "Unique identifier for a specific Dispute record.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dispute"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Dispute"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Dispute"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The Dispute is updated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Dispute"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dispute"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dispute"
                }
              }
            }
          },
          "400": {
            "description": "The request was not well formed. Check the parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "The Dispute to update was not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "There was a server error that prevented the update from completing successfully."
          },
          "401": {
            "description": "Unauthenticated."
          },
          "403": {
            "description": "Forbidden, wrong user roles."
          }
        }
      }
    },
    "/api/dispute/{disputeId}/reject": {
      "put": {
        "tags": [
          "Dispute"
        ],
        "summary": "Updates the status of a particular Dispute record to REJECTED.",
        "parameters": [
          {
            "name": "disputeId",
            "in": "path",
            "description": "Unique identifier for a specific Dispute record to cancel.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "rejectedReason"
                ],
                "type": "object",
                "properties": {
                  "rejectedReason": {
                    "maxLength": 256,
                    "minLength": 0,
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "rejectedReason": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The Dispute is updated."
          },
          "400": {
            "description": "The request was not well formed. Check the parameters."
          },
          "401": {
            "description": "Unauthenticated."
          },
          "403": {
            "description": "Forbidden, wrong user roles."
          },
          "404": {
            "description": "Dispute record not found. Update failed."
          },
          "405": {
            "description": "A Dispute status can only be set to REJECTED iff status is NEW, CANCELLED, or REJECTED and the rejected reason must be <= 256 characters. Update failed."
          },
          "500": {
            "description": "There was a server error that prevented the update from completing successfully."
          }
        }
      }
    },
    "/api/dispute/{disputeId}/cancel": {
      "put": {
        "tags": [
          "Dispute"
        ],
        "summary": "Updates the status of a particular Dispute record to CANCELLED.",
        "parameters": [
          {
            "name": "disputeId",
            "in": "path",
            "description": "Unique identifier for a specific Dispute record to cancel.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Dispute is updated."
          },
          "400": {
            "description": "The request was not well formed. Check the parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Dispute record not found. Update failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "405": {
            "description": "A Dispute status can only be set to CANCELLED iff status is REJECTED or PROCESSING.Update failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "There was a server error that prevented the update from completing successfully."
          },
          "401": {
            "description": "Unauthenticated."
          },
          "403": {
            "description": "Forbidden, wrong user roles."
          }
        }
      }
    },
    "/api/dispute/{disputeId}/submit": {
      "put": {
        "tags": [
          "Dispute"
        ],
        "summary": "Submits a Dispute record, setting it's status to PROCESSING",
        "parameters": [
          {
            "name": "disputeId",
            "in": "path",
            "description": "Unique identifier for a specific Dispute record to submit.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Dispute is updated."
          },
          "400": {
            "description": "The request was not well formed. Check the parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, wrong user roles.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Dispute record not found. Update failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "405": {
            "description": "A Dispute can only be submitted if the status is NEW or is already set to PROCESSING. Update failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "There was a server error that prevented the update from completing successfully."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Dispute": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdTs": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedTs": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid"
          },
          "status": {
            "$ref": "#/components/schemas/DisputeStatus"
          },
          "ticketNumber": {
            "type": "string",
            "nullable": true
          },
          "provincialCourtHearingLocation": {
            "type": "string",
            "nullable": true
          },
          "issuedDate": {
            "type": "string",
            "format": "date-time"
          },
          "submittedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "givenNames": {
            "type": "string",
            "nullable": true
          },
          "birthdate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "driversLicenceNumber": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "driversLicenceProvince": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "province": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "maxLength": 6,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "homePhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "workPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "filingDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "disputedCounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisputedCount"
            },
            "nullable": true
          },
          "representedByLawyer": {
            "type": "boolean"
          },
          "legalRepresentation": {
            "$ref": "#/components/schemas/LegalRepresentation"
          },
          "interpreterLanguage": {
            "type": "string",
            "nullable": true
          },
          "numberOfWitness": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fineReductionReason": {
            "type": "string",
            "nullable": true
          },
          "timeToPayReason": {
            "type": "string",
            "nullable": true
          },
          "rejectedReason": {
            "type": "string",
            "nullable": true
          },
          "disputantDetectedOcrIssues": {
            "type": "boolean"
          },
          "disputantOcrIssuesDescription": {
            "type": "string",
            "nullable": true
          },
          "systemDetectedOcrIssues": {
            "type": "boolean"
          },
          "jjAssigned": {
            "type": "string",
            "nullable": true
          },
          "ocrViolationTicket": {
            "type": "string",
            "nullable": true
          },
          "assignedTo": {
            "type": "string",
            "nullable": true
          },
          "assignedTs": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "violationTicket": {
            "$ref": "#/components/schemas/ViolationTicket"
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DisputeStatus": {
        "enum": [
          "NEW",
          "PROCESSING",
          "REJECTED",
          "CANCELLED"
        ],
        "type": "string"
      },
      "DisputedCount": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdTs": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedTs": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid"
          },
          "plea": {
            "$ref": "#/components/schemas/DisputedCountPlea"
          },
          "count": {
            "maximum": 3,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "requestTimeToPay": {
            "type": "boolean"
          },
          "requestReduction": {
            "type": "boolean"
          },
          "appearInCourt": {
            "type": "boolean"
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DisputedCountPlea": {
        "enum": [
          "GUILTY",
          "NOT_GUILTY"
        ],
        "type": "string"
      },
      "LegalRepresentation": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdTs": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedTs": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid"
          },
          "lawFirmName": {
            "type": "string",
            "nullable": true
          },
          "lawyerFullName": {
            "type": "string",
            "nullable": true
          },
          "lawyerEmail": {
            "type": "string",
            "nullable": true
          },
          "lawyerAddress": {
            "type": "string",
            "nullable": true
          },
          "lawyerPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MimeType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "primaryType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "subType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ViolationTicket": {
        "type": "object",
        "properties": {
          "violationTicketImage": {
            "$ref": "#/components/schemas/ViolationTicketImage"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdTs": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedTs": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid"
          },
          "ticketNumber": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "givenNames": {
            "type": "string",
            "nullable": true
          },
          "isYoungPerson": {
            "type": "boolean",
            "nullable": true
          },
          "driversLicenceNumber": {
            "maxLength": 30,
            "minLength": 7,
            "type": "string",
            "nullable": true
          },
          "driversLicenceProvince": {
            "type": "string",
            "nullable": true
          },
          "driversLicenceProducedYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "driversLicenceExpiryYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "birthdate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "province": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "isChangeOfAddress": {
            "type": "boolean",
            "nullable": true
          },
          "isDriver": {
            "type": "boolean",
            "nullable": true
          },
          "isCyclist": {
            "type": "boolean",
            "nullable": true
          },
          "isOwner": {
            "type": "boolean",
            "nullable": true
          },
          "isPedestrian": {
            "type": "boolean",
            "nullable": true
          },
          "isPassenger": {
            "type": "boolean",
            "nullable": true
          },
          "isOther": {
            "type": "boolean",
            "nullable": true
          },
          "otherDescription": {
            "type": "string",
            "nullable": true
          },
          "issuedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "issuedOnRoadOrHighway": {
            "type": "string",
            "nullable": true
          },
          "issuedAtOrNearCity": {
            "type": "string",
            "nullable": true
          },
          "isMvaOffence": {
            "type": "boolean",
            "nullable": true
          },
          "isWlaOffence": {
            "type": "boolean",
            "nullable": true
          },
          "isLcaOffence": {
            "type": "boolean",
            "nullable": true
          },
          "isMcaOffence": {
            "type": "boolean",
            "nullable": true
          },
          "isFaaOffence": {
            "type": "boolean",
            "nullable": true
          },
          "isTcrOffence": {
            "type": "boolean",
            "nullable": true
          },
          "isCtaOffence": {
            "type": "boolean",
            "nullable": true
          },
          "isOtherOffence": {
            "type": "boolean",
            "nullable": true
          },
          "otherOffenceDescription": {
            "type": "string",
            "nullable": true
          },
          "organizationLocation": {
            "type": "string",
            "nullable": true
          },
          "violationTicketCounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ViolationTicketCount"
            },
            "nullable": true
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An extension of the ViolationTicket object to include a ViolationTicketImage object."
      },
      "ViolationTicketCount": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdTs": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedTs": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid"
          },
          "count": {
            "maximum": 3,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "actRegulation": {
            "type": "string",
            "nullable": true
          },
          "fullSection": {
            "type": "string",
            "nullable": true
          },
          "section": {
            "type": "string",
            "nullable": true
          },
          "subsection": {
            "type": "string",
            "nullable": true
          },
          "paragraph": {
            "type": "string",
            "nullable": true
          },
          "ticketedAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isAct": {
            "type": "boolean",
            "nullable": true
          },
          "isRegulation": {
            "type": "boolean",
            "nullable": true
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ViolationTicketImage": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "The byte[] of the ViolationTicket image.",
            "format": "byte",
            "nullable": true
          },
          "mimeType": {
            "$ref": "#/components/schemas/MimeType"
          }
        },
        "additionalProperties": false,
        "description": "A class that contains the byte[] data (raw image) that is retrieved from the object store."
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}