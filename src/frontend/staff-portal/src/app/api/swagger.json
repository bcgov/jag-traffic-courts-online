{
  "openapi": "3.0.1",
  "info": {
    "title": "VTC Staff API",
    "description": "Violation Ticket Centre Staff API",
    "version": "v1"
  },
  "paths": {
    "/api/dispute/disputes": {
      "get": {
        "tags": [
          "Dispute"
        ],
        "summary": "Returns all Disputes from the Oracle Data API with optional exclusion parameter to exclude disputes having specified status from the result.",
        "parameters": [
          {
            "name": "excludeStatus",
            "in": "query",
            "description": "",
            "schema": {
              "$ref": "#/components/schemas/ExcludeStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Disputes were found.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dispute"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dispute"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dispute"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires dispute:read permission.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "There was a server error that prevented the search from completing successfully or no data found."
          }
        }
      }
    },
    "/api/dispute/{disputeId}": {
      "get": {
        "tags": [
          "Dispute"
        ],
        "summary": "Returns a single Dispute with the given identifier from the Oracle Data API.",
        "parameters": [
          {
            "name": "disputeId",
            "in": "path",
            "description": "Unique identifier for a specific Dispute record.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Dispute was found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Dispute"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dispute"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dispute"
                }
              }
            }
          },
          "400": {
            "description": "The request was not well formed. Check the parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires dispute:read permission.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "The dispute was not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "The Dispute has already been assigned to a user. Dispute cannot be modified until assigned time expires.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "There was a server error that prevented the search from completing successfully or no data found."
          }
        }
      },
      "put": {
        "tags": [
          "Dispute"
        ],
        "summary": "Updates a single Dispute through the Oracle Data Interface API based on unique dispute id and the dispute data being passed in the body.",
        "parameters": [
          {
            "name": "disputeId",
            "in": "path",
            "description": "Unique identifier for a specific Dispute record.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dispute"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Dispute"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Dispute"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The Dispute is updated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Dispute"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dispute"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dispute"
                }
              }
            }
          },
          "400": {
            "description": "The request was not well formed. Check the parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires dispute:update permission.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "The Dispute to update was not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "The Dispute has already been assigned to a user. Dispute cannot be modified until assigned time expires.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "There was a server error that prevented the update from completing successfully."
          }
        }
      }
    },
    "/api/dispute/{disputeId}/reject": {
      "put": {
        "tags": [
          "Dispute"
        ],
        "summary": "Updates the status of a particular Dispute record to REJECTED.",
        "parameters": [
          {
            "name": "disputeId",
            "in": "path",
            "description": "Unique identifier for a specific Dispute record to cancel.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "rejectedReason"
                ],
                "type": "object",
                "properties": {
                  "rejectedReason": {
                    "maxLength": 256,
                    "minLength": 0,
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "rejectedReason": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The Dispute is updated."
          },
          "400": {
            "description": "The request was not well formed. Check the parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires dispute:reject permission.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Dispute record not found. Update failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "405": {
            "description": "A Dispute status can only be set to REJECTED iff status is NEW, CANCELLED, VALIDATED or REJECTED and the rejected reason must be <= 256 characters. Update failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "The Dispute has already been assigned to a different user. Dispute cannot be modified until assigned time expires.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "There was a server error that prevented the update from completing successfully."
          }
        }
      }
    },
    "/api/dispute/{disputeId}/validate": {
      "put": {
        "tags": [
          "Dispute"
        ],
        "summary": "Updates the status of a particular Dispute record to VALIDATED.",
        "parameters": [
          {
            "name": "disputeId",
            "in": "path",
            "description": "Unique identifier for a specific Dispute record to validate.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Dispute is updated."
          },
          "400": {
            "description": "The request was not well formed. Check the parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires dispute:validate permission.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Dispute record not found. Update failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "405": {
            "description": "A Dispute status can only be set to VALIDATED iff status is NEW. Update failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "The Dispute has already been assigned to a different user. Dispute cannot be modified until assigned time expires.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "There was a server error that prevented the update from completing successfully."
          }
        }
      }
    },
    "/api/dispute/{disputeId}/cancel": {
      "put": {
        "tags": [
          "Dispute"
        ],
        "summary": "Updates the status of a particular Dispute record to CANCELLED.",
        "parameters": [
          {
            "name": "disputeId",
            "in": "path",
            "description": "Unique identifier for a specific Dispute record to cancel.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Dispute is updated."
          },
          "400": {
            "description": "The request was not well formed. Check the parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires dispute:cancel permission.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Dispute record not found. Update failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "405": {
            "description": "A Dispute status can only be set to CANCELLED iff status is NEW, VALIDATED, REJECTED or PROCESSING.Update failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "The Dispute has already been assigned to a different user. Dispute cannot be modified until assigned time expires.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "There was a server error that prevented the update from completing successfully."
          }
        }
      }
    },
    "/api/dispute/{disputeId}/resendemailverify": {
      "put": {
        "tags": [
          "Dispute"
        ],
        "summary": "An endpoint for resending an email to a Disputant.",
        "parameters": [
          {
            "name": "disputeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/dispute/{disputeId}/submit": {
      "put": {
        "tags": [
          "Dispute"
        ],
        "summary": "Submits a Dispute record, setting it's status to PROCESSING",
        "parameters": [
          {
            "name": "disputeId",
            "in": "path",
            "description": "Unique identifier for a specific Dispute record to submit.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Dispute is updated."
          },
          "400": {
            "description": "The request was not well formed. Check the parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires dispute:submit permission.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Dispute record not found. Update failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "405": {
            "description": "A Dispute can only be submitted if the status is NEW or is already set to PROCESSING. Update failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "The Dispute has already been assigned to a different user. Dispute cannot be modified until assigned time expires.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "There was a server error that prevented the update from completing successfully."
          }
        }
      }
    },
    "/api/emailhistory/emailhistory": {
      "get": {
        "tags": [
          "EmailHistory"
        ],
        "summary": "Returns all File History Records from the Oracle Data API related to a specific ticket number.",
        "parameters": [
          {
            "name": "ticketNumber",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The File history records were found.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailHistory"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailHistory"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailHistory"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires dispute:read permission.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "There was a server error that prevented the search from completing successfully or no data found."
          },
          "401": {
            "description": "Unauthenticated."
          }
        }
      }
    },
    "/api/filehistory/filehistory": {
      "get": {
        "tags": [
          "FileHistory"
        ],
        "summary": "Returns all File History Records from the Oracle Data API related to a specific ticket number.",
        "parameters": [
          {
            "name": "ticketNumber",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The File history records were found.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileHistory"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileHistory"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileHistory"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires dispute:read permission.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "There was a server error that prevented the search from completing successfully or no data found."
          },
          "401": {
            "description": "Unauthenticated."
          }
        }
      }
    },
    "/api/jj/disputes": {
      "get": {
        "tags": [
          "JJ"
        ],
        "summary": "Returns all JJ Disputes from the Oracle Data API",
        "parameters": [
          {
            "name": "jjAssignedTo",
            "in": "query",
            "description": "If specified, will retrieve the records which are assigned to the specified jj staff",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The JJ disputes were found.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JJDispute"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JJDispute"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JJDispute"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires jj-dispute:read permission.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "There was a server error that prevented the search from completing successfully or no data found."
          }
        }
      }
    },
    "/api/jj/{JJDisputeId}": {
      "get": {
        "tags": [
          "JJ"
        ],
        "summary": "Returns a single JJ Dispute with the given identifier from the Oracle Data API.",
        "parameters": [
          {
            "name": "JJDisputeId",
            "in": "path",
            "description": "Unique identifier for a specific JJ dispute record.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assignVTC",
            "in": "query",
            "description": "boolean to indicate need to assign VTC.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The JJ dispute was found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JJDispute"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JJDispute"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JJDispute"
                }
              }
            }
          },
          "400": {
            "description": "The request was not well formed. Check the parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires jj-dispute:read permission.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "The JJDispute has already been assigned to a user. JJDispute cannot be modified until assigned time expires.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "There was a server error that prevented the search from completing successfully or no data found."
          }
        }
      }
    },
    "/api/jj/{ticketNumber}": {
      "put": {
        "tags": [
          "JJ"
        ],
        "summary": "Updates a single JJ Dispute through the Oracle Data Interface API based on unique violation ticket number and the jj dispute data being passed in the body.",
        "parameters": [
          {
            "name": "ticketNumber",
            "in": "path",
            "description": "Unique identifier for a specific JJ Dispute record.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "checkVTC",
            "in": "query",
            "description": "boolean to indicate need to check VTC assigned.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JJDispute"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/JJDispute"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/JJDispute"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Admin resolution is submitted. The JJ Dispute is updated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JJDispute"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JJDispute"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JJDispute"
                }
              }
            }
          },
          "400": {
            "description": "The request was not well formed. Check the parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires jj-dispute:update permission.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "The JJ Dispute to update was not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "405": {
            "description": "An invalid JJ Dispute status is provided. Update failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "There was a server error that prevented the update from completing successfully."
          }
        }
      }
    },
    "/api/jj/assign": {
      "put": {
        "tags": [
          "JJ"
        ],
        "summary": "Updates each JJ Dispute based on the passed in IDs (ticket number) to assign them to a specific JJ or unassign them if JJ not specified.",
        "parameters": [
          {
            "name": "ticketNumbers",
            "in": "query",
            "description": "List of Unique identifiers for JJ Dispute records to be assigend/unassigned.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "IDIR username of the JJ that JJ Dispute(s) will be assigned to, if specified. Otherwise JJ Disputes will be unassigned.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JJ Disputes are assigned/unassigned to/from a JJ successfully. The JJ Disputes are updated."
          },
          "400": {
            "description": "The request was not well formed. Check the parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires jj-dispute:assign permission.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "The JJ Dispute(s) to update was not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "There was a server error that prevented the update from completing successfully."
          }
        }
      }
    },
    "/api/jj/{ticketNumber}/review": {
      "put": {
        "tags": [
          "JJ"
        ],
        "summary": "Updates the status of a particular JJDispute record to REVIEW as well as adds an optional remark that explaining why the status was set to REVIEW.",
        "parameters": [
          {
            "name": "ticketNumber",
            "in": "path",
            "description": "Unique identifier for a specific JJ Dispute record.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "checkVTC",
            "in": "query",
            "description": "boolean to indicate need to check VTC assigned.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "remark": {
                    "maxLength": 256,
                    "minLength": 0,
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "remark": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The JJDispute is updated."
          },
          "400": {
            "description": "The request was not well formed. Check the parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires jjdispute:review permission.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "JJDispute record not found. Update failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "405": {
            "description": "A JJDispute status can only be set to REVIEW iff status is NEW or VALIDATED and the remark must be less than or equal to 256 characters. Update failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "The JJDispute has already been assigned to a different user. JJDispute cannot be modified until assigned time expires.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "There was a server error that prevented the update from completing successfully."
          }
        }
      }
    },
    "/api/jj/{ticketNumber}/accept": {
      "put": {
        "tags": [
          "JJ"
        ],
        "summary": "Updates the status of a particular JJDispute record to ACCEPTED.",
        "parameters": [
          {
            "name": "ticketNumber",
            "in": "path",
            "description": "Unique identifier for a specific JJ Dispute record.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "checkVTC",
            "in": "query",
            "description": "boolean to indicate need to check VTC assigned.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The JJDispute is updated."
          },
          "400": {
            "description": "The request was not well formed. Check the parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires jjdispute:accept permission.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "JJDispute record not found. Update failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "405": {
            "description": "A JJDispute status can only be set to ACCEPTED iff status is CONFIRMED. Update failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "The JJDispute has already been assigned to a different user. JJDispute cannot be modified until assigned time expires.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "There was a server error that prevented the update from completing successfully."
          }
        }
      }
    },
    "/api/keycloak/{groupName}/users": {
      "get": {
        "tags": [
          "Keycloak"
        ],
        "summary": "Returns all Users with the given group name.",
        "parameters": [
          {
            "name": "groupName",
            "in": "path",
            "description": "A unique group name to query.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRepresentation"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRepresentation"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRepresentation"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/lookup/statutes": {
      "get": {
        "tags": [
          "Lookup"
        ],
        "summary": "Returns a list of Violation Ticket Statutes filtered by given section text (if provided).",
        "parameters": [
          {
            "name": "section",
            "in": "query",
            "description": "Motor vehicle act Section text to query by, ie \"13(1)(a)\" returns \"Motor Vehicle or Trailer without Licence\" contravention, or blank for no filter.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Statute"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/lookup/languages": {
      "get": {
        "tags": [
          "Lookup"
        ],
        "summary": "Returns a list of Languages.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Language"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BoundingBox": {
        "type": "object",
        "properties": {
          "points": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Point"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CredentialRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "userLabel": {
            "type": "string",
            "nullable": true
          },
          "secretData": {
            "type": "string",
            "nullable": true
          },
          "credentialData": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "createdDate": {
            "type": "integer",
            "format": "int64"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "temporary": {
            "type": "boolean"
          },
          "device": {
            "type": "string",
            "nullable": true
          },
          "hashedSaltedValue": {
            "type": "string",
            "nullable": true
          },
          "salt": {
            "type": "string",
            "nullable": true
          },
          "hashIterations": {
            "type": "integer",
            "format": "int32"
          },
          "counter": {
            "type": "integer",
            "format": "int32"
          },
          "algorithm": {
            "type": "string",
            "nullable": true
          },
          "digits": {
            "type": "integer",
            "format": "int32"
          },
          "period": {
            "type": "integer",
            "format": "int32"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DisputantContactInformation": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdTs": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedTs": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "givenNames": {
            "type": "string",
            "nullable": true
          },
          "birthdate": {
            "type": "string",
            "format": "date-time"
          },
          "driversLicenceNumber": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "province": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dispute": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdTs": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedTs": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "disputeId": {
            "type": "integer",
            "format": "int64"
          },
          "noticeOfDisputeGuid": {
            "type": "string",
            "nullable": true
          },
          "ticketNumber": {
            "type": "string",
            "nullable": true
          },
          "issuedTs": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "submittedTs": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "disputantSurname": {
            "type": "string",
            "nullable": true
          },
          "disputantGivenName1": {
            "type": "string",
            "nullable": true
          },
          "disputantGivenName2": {
            "type": "string",
            "nullable": true
          },
          "disputantGivenName3": {
            "type": "string",
            "nullable": true
          },
          "disputantBirthdate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "driversLicenceNumber": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "disputantOrganization": {
            "type": "string",
            "nullable": true
          },
          "disputantClientId": {
            "type": "string",
            "nullable": true
          },
          "driversLicenceProvince": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/DisputeStatus"
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "addressLine3": {
            "type": "string",
            "nullable": true
          },
          "addressCity": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "addressProvince": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "homePhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "workPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "emailAddressVerified": {
            "type": "boolean"
          },
          "filingDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "representedByLawyer": {
            "$ref": "#/components/schemas/DisputeRepresentedByLawyer"
          },
          "lawFirmName": {
            "type": "string",
            "nullable": true
          },
          "lawyerSurname": {
            "type": "string",
            "nullable": true
          },
          "lawyerGivenName1": {
            "type": "string",
            "nullable": true
          },
          "lawyerGivenName2": {
            "type": "string",
            "nullable": true
          },
          "lawyerGivenName3": {
            "type": "string",
            "nullable": true
          },
          "lawyerAddress": {
            "maxLength": 300,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lawyerPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "lawyerEmail": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "officerPin": {
            "type": "string",
            "nullable": true
          },
          "detachmentLocation": {
            "type": "string",
            "nullable": true
          },
          "interpreterLanguageCd": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "interpreterRequired": {
            "$ref": "#/components/schemas/DisputeInterpreterRequired"
          },
          "witnessNo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fineReductionReason": {
            "type": "string",
            "nullable": true
          },
          "timeToPayReason": {
            "type": "string",
            "nullable": true
          },
          "disputantComment": {
            "type": "string",
            "nullable": true
          },
          "rejectedReason": {
            "type": "string",
            "nullable": true
          },
          "userAssignedTo": {
            "type": "string",
            "nullable": true
          },
          "userAssignedTs": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "disputantDetectedOcrIssues": {
            "$ref": "#/components/schemas/DisputeDisputantDetectedOcrIssues"
          },
          "disputantOcrIssues": {
            "type": "string",
            "nullable": true
          },
          "systemDetectedOcrIssues": {
            "$ref": "#/components/schemas/DisputeSystemDetectedOcrIssues"
          },
          "ocrTicketFilename": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "violationTicket": {
            "$ref": "#/components/schemas/ViolationTicket"
          },
          "disputeCounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisputeCount"
            },
            "nullable": true
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DisputeCount": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdTs": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedTs": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "countNo": {
            "maximum": 3,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "pleaCode": {
            "$ref": "#/components/schemas/DisputeCountPleaCode"
          },
          "requestTimeToPay": {
            "$ref": "#/components/schemas/DisputeCountRequestTimeToPay"
          },
          "requestReduction": {
            "$ref": "#/components/schemas/DisputeCountRequestReduction"
          },
          "requestCourtAppearance": {
            "$ref": "#/components/schemas/DisputeCountRequestCourtAppearance"
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DisputeCountPleaCode": {
        "enum": [
          "G",
          "N"
        ],
        "type": "string"
      },
      "DisputeCountRequestCourtAppearance": {
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      },
      "DisputeCountRequestReduction": {
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      },
      "DisputeCountRequestTimeToPay": {
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      },
      "DisputeDisputantDetectedOcrIssues": {
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      },
      "DisputeInterpreterRequired": {
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      },
      "DisputeRepresentedByLawyer": {
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      },
      "DisputeStatus": {
        "enum": [
          "NEW",
          "VALIDATED",
          "PROCESSING",
          "REJECTED",
          "CANCELLED"
        ],
        "type": "string"
      },
      "DisputeSystemDetectedOcrIssues": {
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      },
      "EmailHistory": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdTs": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedTs": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "emailHistoryId": {
            "type": "integer",
            "format": "int64"
          },
          "fromEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "toEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "htmlContent": {
            "type": "string",
            "nullable": true
          },
          "plainTextContent": {
            "type": "string",
            "nullable": true
          },
          "successfullySent": {
            "$ref": "#/components/schemas/EmailHistorySuccessfullySent"
          },
          "ticketNumber": {
            "type": "string",
            "nullable": true
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmailHistorySuccessfullySent": {
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      },
      "ExcludeStatus": {
        "enum": [
          "NEW",
          "VALIDATED",
          "PROCESSING",
          "REJECTED",
          "CANCELLED"
        ],
        "type": "string"
      },
      "FederatedIdentityRepresentation": {
        "type": "object",
        "properties": {
          "identityProvider": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Field": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "fieldConfidence": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "validationErrors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "boundingBoxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoundingBox"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileHistory": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdTs": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedTs": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fileHistoryId": {
            "type": "integer",
            "format": "int64"
          },
          "ticketNumber": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JJDispute": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdTs": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedTs": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ticketNumber": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/JJDisputeStatus"
          },
          "hearingType": {
            "$ref": "#/components/schemas/JJDisputeHearingType"
          },
          "submittedTs": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "violationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "icbcReceivedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "givenNames": {
            "type": "string",
            "nullable": true
          },
          "enforcementOfficer": {
            "type": "string",
            "nullable": true
          },
          "policeDetachment": {
            "type": "string",
            "nullable": true
          },
          "courthouseLocation": {
            "type": "string",
            "nullable": true
          },
          "offenceLocation": {
            "type": "string",
            "nullable": true
          },
          "jjAssignedTo": {
            "type": "string",
            "nullable": true
          },
          "jjDecisionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "vtcAssignedTo": {
            "type": "string",
            "nullable": true
          },
          "vtcAssignedTs": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fineReductionReason": {
            "type": "string",
            "nullable": true
          },
          "timeToPayReason": {
            "type": "string",
            "nullable": true
          },
          "lawFirmName": {
            "type": "string",
            "nullable": true
          },
          "lawyerSurname": {
            "type": "string",
            "nullable": true
          },
          "lawyerGivenName1": {
            "type": "string",
            "nullable": true
          },
          "lawyerGivenName2": {
            "type": "string",
            "nullable": true
          },
          "lawyerGivenName3": {
            "type": "string",
            "nullable": true
          },
          "interpreterLanguageCd": {
            "type": "string",
            "nullable": true
          },
          "witnessNo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "disputantAttendanceType": {
            "$ref": "#/components/schemas/JJDisputeDisputantAttendanceType"
          },
          "remarks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JJDisputeRemark"
            },
            "nullable": true
          },
          "contactInformation": {
            "$ref": "#/components/schemas/DisputantContactInformation"
          },
          "jjDisputedCounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JJDisputedCount"
            },
            "nullable": true
          },
          "jjDisputeCourtAppearanceRoPs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JJDisputeCourtAppearanceRoP"
            },
            "nullable": true
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JJDisputeCourtAppearanceRoP": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdTs": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedTs": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "appearanceTs": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "room": {
            "type": "string",
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "app": {
            "$ref": "#/components/schemas/JJDisputeCourtAppearanceRoPApp"
          },
          "noAppTs": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "clerkRecord": {
            "type": "string",
            "nullable": true
          },
          "defenseCounsel": {
            "type": "string",
            "nullable": true
          },
          "crown": {
            "$ref": "#/components/schemas/JJDisputeCourtAppearanceRoPCrown"
          },
          "jjSeized": {
            "type": "string",
            "nullable": true
          },
          "adjudicator": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JJDisputeCourtAppearanceRoPApp": {
        "enum": [
          "A",
          "P",
          "N"
        ],
        "type": "string"
      },
      "JJDisputeCourtAppearanceRoPCrown": {
        "enum": [
          "P",
          "N"
        ],
        "type": "string"
      },
      "JJDisputeDisputantAttendanceType": {
        "enum": [
          "WRITTEN_REASONS",
          "VIDEO_CONFERENCE",
          "TELEPHONE_CONFERENCE",
          "MSTEAMS_AUDIO",
          "MSTEAMS_VIDEO",
          "IN_PERSON"
        ],
        "type": "string"
      },
      "JJDisputeHearingType": {
        "enum": [
          "COURT_APPEARANCE",
          "WRITTEN_REASONS"
        ],
        "type": "string"
      },
      "JJDisputeRemark": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdTs": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedTs": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "userFullName": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JJDisputeStatus": {
        "enum": [
          "NEW",
          "IN_PROGRESS",
          "DATA_UPDATE",
          "CONFIRMED",
          "REQUIRE_COURT_HEARING",
          "REQUIRE_MORE_INFO",
          "ACCEPTED",
          "REVIEW",
          "HEARING_SCHEDULED"
        ],
        "type": "string"
      },
      "JJDisputedCount": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdTs": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedTs": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "plea": {
            "$ref": "#/components/schemas/JJDisputedCountPlea"
          },
          "count": {
            "maximum": 3,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "requestTimeToPay": {
            "$ref": "#/components/schemas/JJDisputedCountRequestTimeToPay"
          },
          "requestReduction": {
            "$ref": "#/components/schemas/JJDisputedCountRequestReduction"
          },
          "appearInCourt": {
            "$ref": "#/components/schemas/JJDisputedCountAppearInCourt"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ticketedFineAmount": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "includesSurcharge": {
            "$ref": "#/components/schemas/JJDisputedCountIncludesSurcharge"
          },
          "revisedDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "totalFineAmount": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "comments": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "jjDisputedCountRoP": {
            "$ref": "#/components/schemas/JJDisputedCountRoP"
          },
          "lesserOrGreaterAmount": {
            "type": "number",
            "format": "float"
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JJDisputedCountAppearInCourt": {
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      },
      "JJDisputedCountIncludesSurcharge": {
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      },
      "JJDisputedCountPlea": {
        "enum": [
          "G",
          "N"
        ],
        "type": "string"
      },
      "JJDisputedCountRequestReduction": {
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      },
      "JJDisputedCountRequestTimeToPay": {
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      },
      "JJDisputedCountRoP": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdTs": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedTs": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "finding": {
            "$ref": "#/components/schemas/JJDisputedCountRoPFinding"
          },
          "lesserDescription": {
            "type": "string",
            "nullable": true
          },
          "ssProbationDuration": {
            "type": "string",
            "nullable": true
          },
          "ssProbationConditions": {
            "type": "string",
            "nullable": true
          },
          "jailDuration": {
            "type": "string",
            "nullable": true
          },
          "jailIntermittent": {
            "$ref": "#/components/schemas/JJDisputedCountRoPJailIntermittent"
          },
          "probationDuration": {
            "type": "string",
            "nullable": true
          },
          "probationConditions": {
            "type": "string",
            "nullable": true
          },
          "drivingProhibition": {
            "type": "string",
            "nullable": true
          },
          "drivingProhibitionMVASection": {
            "type": "string",
            "nullable": true
          },
          "dismissed": {
            "$ref": "#/components/schemas/JJDisputedCountRoPDismissed"
          },
          "forWantOfProsecution": {
            "$ref": "#/components/schemas/JJDisputedCountRoPForWantOfProsecution"
          },
          "withdrawn": {
            "$ref": "#/components/schemas/JJDisputedCountRoPWithdrawn"
          },
          "abatement": {
            "$ref": "#/components/schemas/JJDisputedCountRoPAbatement"
          },
          "stayOfProceedingsBy": {
            "type": "string",
            "nullable": true
          },
          "other": {
            "type": "string",
            "nullable": true
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JJDisputedCountRoPAbatement": {
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      },
      "JJDisputedCountRoPDismissed": {
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      },
      "JJDisputedCountRoPFinding": {
        "enum": [
          "GUILTY",
          "NOT_GUILTY",
          "GUILTY_LESSER"
        ],
        "type": "string"
      },
      "JJDisputedCountRoPForWantOfProsecution": {
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      },
      "JJDisputedCountRoPJailIntermittent": {
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      },
      "JJDisputedCountRoPWithdrawn": {
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      },
      "Language": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OcrViolationTicket": {
        "type": "object",
        "properties": {
          "imageFilename": {
            "type": "string",
            "nullable": true
          },
          "globalConfidence": {
            "type": "number",
            "format": "float"
          },
          "fields": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Field"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Point": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "float"
          },
          "y": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "SocialLinkRepresentation": {
        "type": "object",
        "properties": {
          "socialProvider": {
            "type": "string",
            "nullable": true
          },
          "socialUserId": {
            "type": "string",
            "nullable": true
          },
          "socialUsername": {
            "type": "string",
            "nullable": true
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Statute": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "actCode": {
            "type": "string",
            "nullable": true
          },
          "sectionText": {
            "type": "string",
            "nullable": true
          },
          "subsectionText": {
            "type": "string",
            "nullable": true
          },
          "paragraphText": {
            "type": "string",
            "nullable": true
          },
          "subparagraphText": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "shortDescriptionText": {
            "type": "string",
            "nullable": true
          },
          "descriptionText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserConsentRepresentation": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "grantedClientScopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "createdDate": {
            "type": "integer",
            "format": "int64"
          },
          "lastUpdatedDate": {
            "type": "integer",
            "format": "int64"
          },
          "grantedRealmRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserRepresentation": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "createdTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "totp": {
            "type": "boolean"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "credentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CredentialRepresentation"
            },
            "nullable": true
          },
          "requiredActions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "federatedIdentities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FederatedIdentityRepresentation"
            },
            "nullable": true
          },
          "socialLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialLinkRepresentation"
            },
            "nullable": true
          },
          "realmRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "clientRoles": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "clientConsents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserConsentRepresentation"
            },
            "nullable": true
          },
          "notBefore": {
            "type": "integer",
            "format": "int32"
          },
          "applicationRoles": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "federationLink": {
            "type": "string",
            "nullable": true
          },
          "serviceAccountClientId": {
            "type": "string",
            "nullable": true
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "origin": {
            "type": "string",
            "nullable": true
          },
          "disableableCredentialTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "access": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ViolationTicket": {
        "type": "object",
        "properties": {
          "violationTicketImage": {
            "$ref": "#/components/schemas/ViolationTicketImage"
          },
          "ocrViolationTicket": {
            "$ref": "#/components/schemas/OcrViolationTicket"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdTs": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedTs": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "violationTicketId": {
            "type": "integer",
            "format": "int64"
          },
          "ticketNumber": {
            "type": "string",
            "nullable": true
          },
          "disputantOrganizationName": {
            "type": "string",
            "nullable": true
          },
          "disputantSurname": {
            "type": "string",
            "nullable": true
          },
          "disputantGivenNames": {
            "type": "string",
            "nullable": true
          },
          "isYoungPerson": {
            "$ref": "#/components/schemas/ViolationTicketIsYoungPerson"
          },
          "disputantDriversLicenceNumber": {
            "maxLength": 30,
            "minLength": 7,
            "type": "string",
            "nullable": true
          },
          "disputantClientNumber": {
            "type": "string",
            "nullable": true
          },
          "driversLicenceProvince": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "driversLicenceCountry": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "driversLicenceIssuedYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "driversLicenceExpiryYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "disputantBirthdate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "address": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "addressCity": {
            "type": "string",
            "nullable": true
          },
          "addressProvince": {
            "type": "string",
            "nullable": true
          },
          "addressPostalCode": {
            "type": "string",
            "nullable": true
          },
          "addressCountry": {
            "type": "string",
            "nullable": true
          },
          "officerPin": {
            "type": "string",
            "nullable": true
          },
          "detachmentLocation": {
            "type": "string",
            "nullable": true
          },
          "issuedTs": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "issuedOnRoadOrHighway": {
            "type": "string",
            "nullable": true
          },
          "issuedAtOrNearCity": {
            "type": "string",
            "nullable": true
          },
          "isChangeOfAddress": {
            "$ref": "#/components/schemas/ViolationTicketIsChangeOfAddress"
          },
          "isDriver": {
            "$ref": "#/components/schemas/ViolationTicketIsDriver"
          },
          "isOwner": {
            "$ref": "#/components/schemas/ViolationTicketIsOwner"
          },
          "courtLocation": {
            "type": "string",
            "nullable": true
          },
          "violationTicketCounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ViolationTicketCount"
            },
            "nullable": true
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ViolationTicketCount": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdTs": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedTs": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "violationTicketCountId": {
            "type": "integer",
            "format": "int64"
          },
          "countNo": {
            "maximum": 3,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "actOrRegulationNameCode": {
            "type": "string",
            "nullable": true
          },
          "isAct": {
            "$ref": "#/components/schemas/ViolationTicketCountIsAct"
          },
          "isRegulation": {
            "$ref": "#/components/schemas/ViolationTicketCountIsRegulation"
          },
          "section": {
            "type": "string",
            "nullable": true
          },
          "subsection": {
            "type": "string",
            "nullable": true
          },
          "paragraph": {
            "type": "string",
            "nullable": true
          },
          "subparagraph": {
            "type": "string",
            "nullable": true
          },
          "ticketedAmount": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "additionalProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ViolationTicketCountIsAct": {
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      },
      "ViolationTicketCountIsRegulation": {
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      },
      "ViolationTicketImage": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "mimeType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ViolationTicketIsChangeOfAddress": {
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      },
      "ViolationTicketIsDriver": {
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      },
      "ViolationTicketIsOwner": {
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      },
      "ViolationTicketIsYoungPerson": {
        "enum": [
          "Y",
          "N"
        ],
        "type": "string"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}
